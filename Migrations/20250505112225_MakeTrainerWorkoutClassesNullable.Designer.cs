// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektNET.Data;

#nullable disable

namespace ProjektNET.Migrations
{
    [DbContext(typeof(ProjektNETDbContext))]
    [Migration("20250505112225_MakeTrainerWorkoutClassesNullable")]
    partial class MakeTrainerWorkoutClassesNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjektNET.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkoutClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutClassId");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("ProjektNET.Models.TrainerWorkoutClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.HasIndex("WorkoutClassId");

                    b.ToTable("TrainerWorkoutClasses");
                });

            modelBuilder.Entity("ProjektNET.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkoutClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutClassId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjektNET.Models.UserWorkoutClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutClassId");

                    b.ToTable("UserWorkoutClasses");
                });

            modelBuilder.Entity("ProjektNET.Models.WorkoutClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkoutClasses");
                });

            modelBuilder.Entity("ProjektNET.Models.Trainer", b =>
                {
                    b.HasOne("ProjektNET.Models.WorkoutClass", null)
                        .WithMany("Trainers")
                        .HasForeignKey("WorkoutClassId");
                });

            modelBuilder.Entity("ProjektNET.Models.TrainerWorkoutClass", b =>
                {
                    b.HasOne("ProjektNET.Models.Trainer", "Trainer")
                        .WithMany("TrainerWorkoutClasses")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektNET.Models.WorkoutClass", "WorkoutClass")
                        .WithMany("TrainerWorkoutClasses")
                        .HasForeignKey("WorkoutClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");

                    b.Navigation("WorkoutClass");
                });

            modelBuilder.Entity("ProjektNET.Models.User", b =>
                {
                    b.HasOne("ProjektNET.Models.WorkoutClass", null)
                        .WithMany("Users")
                        .HasForeignKey("WorkoutClassId");
                });

            modelBuilder.Entity("ProjektNET.Models.UserWorkoutClass", b =>
                {
                    b.HasOne("ProjektNET.Models.User", "User")
                        .WithMany("UserWorkoutClasses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektNET.Models.WorkoutClass", "WorkoutClass")
                        .WithMany("UserWorkoutClasses")
                        .HasForeignKey("WorkoutClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkoutClass");
                });

            modelBuilder.Entity("ProjektNET.Models.Trainer", b =>
                {
                    b.Navigation("TrainerWorkoutClasses");
                });

            modelBuilder.Entity("ProjektNET.Models.User", b =>
                {
                    b.Navigation("UserWorkoutClasses");
                });

            modelBuilder.Entity("ProjektNET.Models.WorkoutClass", b =>
                {
                    b.Navigation("TrainerWorkoutClasses");

                    b.Navigation("Trainers");

                    b.Navigation("UserWorkoutClasses");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
